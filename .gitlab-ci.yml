image: python:3.6

stages:
  - build
  - test
  - deploy

variables:
  DATABASE_URL: 'mongod://mongo/user_posts'

build_job:
  stage: build
  image: docker:19.03.12
  before_script:
    - docker version
  script:
    - cd Dockers/search_engine_ui && docker build -t awesomepineapple/search_ui:1.0 . 
    - cd ../search_engine_crawler && docker build -t awesomepineapple/search_crawler:1.0 .

test_crawler_job:
  stage: test
  before_script:
    - docker run --name=test_crawler -d awesomepineapple/search_crawler:1.0
  image: docker:19.03.12
  script:
    - docker exec -t test_crawler sh -c "python -m unittest discover -s tests/ "
  after_script:
    - docker stop test_crawler && docker rm test_crawler

test_ui_job:
  stage: test
  before_script:
    - docker run --name=test_ui -d awesomepineapple/search_ui:1.0
  image: docker:19.03.12
  script:
    - docker exec -t test_ui sh -c "cd .. && python -m unittest discover -s tests/ "
  after_script:
    - docker stop test_ui && docker rm test_ui

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add -U openssl curl tar gzip bash ca-certificates git
    - curl https://get.helm.sh/helm-v2.0.0-linux-amd64.tar.gz | tar zx
    - mv linux-amd64/helm /usr/bin/
    - helm version --client
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.18.12/bin/linux/amd64/kubectl
    - chmod +x /usr/bin/kubectl
    - kubectl version --client
    - helm repo add stable https://charts.helm.sh/stable
    - helm repo update
  script:
    - echo $KUBECONFIG
    - export KUBECONFIG=$KUBECONFIG
    - pwd
    - cd ./search-engine-app && helm dep update && cd .. && helm install search-engine-app --name search-engine
    - helm install search-engine-app --name search-engine-prod --namespace production
  environment:
    name: staging
  only:
    kubernetes: active